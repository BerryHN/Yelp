import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class Recommender {

	HashMap<String, HashMap<String, Long>> ratings;

	public static final int NB_USERS = 45981;
	public static final int NB_BUSINESS = 11537;


	public Recommender()
	{
		this.ratings = new HashMap<String, HashMap<String, Long>>();
	}

	public void loadRatings(String fileName) throws FileNotFoundException, ParseException
	{
		JSONParser parser = new JSONParser();
		Scanner in = new Scanner(new File(fileName));
		while(in.hasNextLine())
		{
			String content = in.nextLine().replace("\\.", "");
			Object obj = parser.parse(content);
			JSONObject jsonObject = (JSONObject) obj;

			// read the json object
			String user_id = (String) jsonObject.get("user_id");
			String business_id = (String) jsonObject.get("business_id");
			Long stars = (Long)jsonObject.get("stars");

			// store in the structure if stars > threshold
			if (ratings.containsKey(user_id))
			{
				ratings.get(user_id).put(business_id, stars);
			}
			else
			{
				HashMap<String,Long> userGrades = new HashMap<String, Long>();
				userGrades.put(business_id, stars);
				ratings.put(user_id, userGrades);
			}
		}
	}
	
	public double getSimilarity(String user1, String user2)
	{
		HashMap<String, Long> grades1 = this.ratings.get(user1);
		HashMap<String, Long> grades2 = this.ratings.get(user2);
		
		// cosine dist
		double norm1 = getNorm(grades1.values());
		double norm2 = getNorm(grades2.values());
		
		// numerator : produit scalaire
		double product = 0;
		for (String business : grades1.keySet())
		{
			if (grades2.containsKey(business))
			{
				product += (grades1.get(business) * grades2.get(business));
			}
		}		
		double similarity = product / (norm1 * norm2);
		return similarity;
	}
	
	public double getNorm(Collection<Long> vector)
	{
		double norm = 0;
		for (Long i : vector)
		{
			norm += i*i;
		}
		return Math.sqrt(norm);
	}
	public static void main(String[] argv) throws FileNotFoundException, ParseException
	{
		System.out.println("hello");
		Recommender yelpRecommender = new Recommender();
		System.out.println("Loading the ratings");
		yelpRecommender.loadRatings("/Users/sabrinerekik/Yelp/yelp_challenge/yelp_phoenix_academic_dataset/yelp_academic_dataset_review.json");
		System.out.println("NberUser : " + yelpRecommender.ratings.size());
		
		String user = "8n--xRBQ9eLDi0vpQ5fGFQ";
		
		
	}
}