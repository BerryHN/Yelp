import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class JsonParser {

	HashMap<String, Integer> userMap;
	HashMap<String, Integer> businessMap;
	long [][] ratings;

	public static final int NB_USERS = 43873;
	public static final int NB_BUSINESS = 11537;

	public JsonParser()
	{
		userMap = new HashMap<String,Integer>();
		businessMap = new HashMap<String,Integer>();
		ratings = new long [NB_USERS][NB_BUSINESS];

	}

	public void loadData(String fileName)  
	{
		int countUser = 0;
		int countBusiness = 0;

		try {
			JSONParser parser = new JSONParser();
			Scanner in = new Scanner(fileName);
			while(in.hasNextLine())
			{
				Object obj = parser.parse(in.nextLine());
				JSONObject jsonObject = (JSONObject) obj;

				// read the json object
				String user_id = (String) jsonObject.get("user_id");
				String business_id = (String) jsonObject.get("business_id");
				Long stars = (Long)jsonObject.get("stars");

				// store the user
				if (!userMap.containsKey(user_id))
				{
					userMap.put(user_id, countUser);
					countUser++;
				}
				
				// store the businness
				if (!businessMap.containsKey(business_id))
				{
					businessMap.put(business_id, countBusiness);
					countBusiness++;
				}
				
				// store the rating
				ratings[userMap.get(user_id)][businessMap.get(business_id)] = stars;
			}
			
			// print size
			System.out.println("nb users : " + userMap.size());
			System.out.println("nb users : " + businessMap.size());
			
			// density of the matrix
			int nbZero = 0;
			for (int i = 0 ; i < NB_USERS; i++)
				for (int j = 0; j < NB_BUSINESS ; j++)
					if (ratings[i][j] == 0)
						nbZero++;
			
			System.out.println("density : " + (double)nbZero / (NB_USERS * NB_BUSINESS));
		}
		catch (ParseException e) {
			e.printStackTrace();
		}

		catch (ArrayIndexOutOfBoundsException e)
		{
			System.out.println("Error : Require dataset path in argument!");
			e.printStackTrace();
		}

	} 
}